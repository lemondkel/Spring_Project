<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lookation.dao.IBookListDAO">
	
	
	<!-- 이용자 -->
	<!-- 해당 이용자의 예약 리스트 -->
	<select id="bookList" resultType="com.lookation.dto.BookListDTO">
		SELECT V.BOOK_CODE, V.MEMBER_CODE, V.APPLY_PACKAGE_CODE, V.LOC_CODE
		, V.APPLY_DATE, V.PACKAGE_CODE, V.PACKAGE_NAME
		, V.PACKAGE_START, V.PACKAGE_END, V.BOOK_DATE
		, V.BOOK_HOUR, V.HOST_CANCEL, V.MEMBER_CANCEL, V.REFUND, V.LOC_NAME
		, (SELECT COUNT(*)
		   FROM LOC_REPORT
		   WHERE MEMBER_CODE = #{member_code}
           AND LOC_CODE = V.LOC_CODE) AS LOC_COUNT
		FROM VIEW_BOOKLIST V
		WHERE MEMBER_CODE = #{member_code}
		ORDER BY BOOK_DATE DESC
	</select>
	
	<!-- 예약 상세보기 -->
	<select id="bookDetails" resultType="com.lookation.dto.BookListDTO">
		SELECT BOOK_CODE, MEMBER_CODE
		, APPLY_DATE, PACKAGE_NAME
		, PACKAGE_START, PACKAGE_END
		, BOOK_HOUR, HOST_CANCEL, MEMBER_CANCEL, REFUND, LOC_NAME
		, ACTUAL_BOOKER, ACTUAL_BOOKER_TEL
		, BOOK_PEOPLE, BOOK_DATE, BOOK_REQ, PACKAGE_PRICE
		, BIZ_NAME, BIZ_CEO, BIZ_LICENSE_NUMBER
		, MEMBER_CANCEL_REASON, HOST_CANCEL_REASON
		, MEMBER_EMAIL, LOC_ADDR, LOC_DETAIL_ADDR
		FROM VIEW_BOOKLIST
		WHERE BOOK_CODE = #{book_code}
	</select>
	
	<!-- 환불가격 계산 -->
	<select id="refundPrice" resultType="com.lookation.dto.BookListDTO">
		SELECT BOOK_CODE, BOOK_HOUR, LOC_NAME
		, APPLY_DATE, PACKAGE_START, PACKAGE_END
		, PACKAGE_PRICE, BOOK_DATE
		, TO_DATE(APPLY_DATE, 'YYYY-MM-DD') - TRUNC(TO_DATE(SYSDATE, 'YYYY-MM-DD')) AS DAYS
		FROM VIEW_BOOKLIST
		WHERE BOOK_CODE = #{book_code}
	</select>
	
	<!-- 이용자 취소신청 -->
	<insert id="memberCancel" >
		INSERT INTO MEMBER_CANCEL_LIST (MEMBER_CANCEL_CODE, BOOK_CODE
		, MEMBER_CANCEL_REASON, MEMBER_CANCEL_DATE)
		VALUES(F_CODE('MC', MC_SEQ.NEXTVAL), #{book_code}, #{member_cancel_reason}, SYSDATE)
	</insert>
	
	<!-- 환불절차(이용자, 호스트) -->
	<insert id="refund">
		INSERT INTO BOOK_REFUND_LIST (BOOK_REFUND_CODE, BOOK_CODE, BOOK_REFUND_DATE)
		VALUES(F_CODE('BRF', BRF_SEQ.NEXTVAL), #{book_code}, SYSDATE)
	</insert>
	
	<select id="memberNick" resultType="java.lang.String">
		SELECT MEMBER_NICKNAME
		FROM MEMBER_PROFILE
		WHERE MEMBER_CODE=#{member_code}
	</select>
	
	 
	<!-- 호스트 -->
	<!-- 해당 호스트의 예약 리스트 -->
	<select id="bookListHost" resultType="com.lookation.dto.BookListDTO">
		SELECT BOOK_CODE, MEMBER_CODE, APPLY_PACKAGE_CODE, BL.LOC_CODE AS LOC_CODE
		      , APPLY_DATE, PACKAGE_CODE, PACKAGE_NAME
			  , PACKAGE_START, PACKAGE_END, BOOK_DATE
			  , BOOK_HOUR, HOST_CANCEL, MEMBER_CANCEL, REFUND, BL.LOC_NAME AS LOC_NAME
			  , HOST_CODE
              , (SELECT COUNT(*)
                 FROM BOOK_REPORT
                 WHERE HOST_CODE = #{host_code}
                   AND BOOK_CODE = BL.BOOK_CODE) AS BOOK_COUNT
		FROM VIEW_BOOKLIST BL JOIN LOC L
		ON BL.LOC_CODE = L.LOC_CODE
		WHERE HOST_CODE = #{host_code}
		ORDER BY BOOK_DATE DESC
	</select>
	
	
	<!-- 호스트 취소신청 -->
	<insert id="hostCancel" >
		INSERT INTO HOST_CANCEL_LIST (HOST_CANCEL_CODE, BOOK_CODE
		, HOST_CANCEL_REASON, HOST_CANCEL_DATE)
		VALUES(F_CODE('HC', HC_SEQ.NEXTVAL), #{book_code}, #{member_cancel_reason}, SYSDATE)
	</insert>
	
	<!-- 환불절차 -->
	<!-- // -->

	<select id="hostNick" resultType="java.lang.String">
		SELECT HOST_NICKNAME
		FROM HOST_PROFILE
		WHERE HOST_CODE=#{host_code}
	</select>
	
</mapper>