
# 소윤
* BlindList
●
1. 블라인드 정보를 가져오는 쿼리문(뷰)
   (분류, 회원번호, 게시물, 처리일자, 처리사유)
♥
1. 블라인드 해제 기능


* DeclarationHost
●
1. 예약번호, 이용자 받아와야 한다.
   추가. 예약테이블에서 모든 정보를 가져오는 쿼리문(뷰)
2. 신고유형 정보를 가져오는 쿼리문
3. 신고 테이블에 삽입하는 쿼리문
   (이용자, 예약번호, 신고유형, 신고사유)
♥
1. 리셋(신고유형, 신고사유)
2. 사진첨부기능


* DeclarationManager
●
1. 모든 신고 정보를 테이블로 부터 가져온다.
   1-1. 신고접수, 신고처리 테이블을 조인하여 조회하는 쿼리문
        (컨텐츠정보, 신고사유, 피신고자정보, 신고자정보, 일자, 처리결과)
   1-2. 관리자 신고처리시 신고처리 테이블에 삽입하는 쿼리문
♥
1. 버튼 누르면 새로고침?


* DeclarationUser
●
1. 공간번호, 호스트 받아와야 한다.
   추가. 공간테이블에서 모든 정보를 가져오는 쿼리문(뷰)
2. 신고유형 정보를 가져오는 쿼리문
3. 신고 테이블에 삽입하는 쿼리문
   (호스트, 공간번호, 신고유형, 신고사유)
♥
1. 리셋(신고유형, 신고사유)
2. 사진첨부기능


* qnaPopup
●
1. 링크로 받은 코드를 조건으로 하여 qna의 모든 정보를 가져오는 쿼리문
   (내용, Q&A 작성일자, 회원 닉네임) 
♥
1. 팝업창


* qnaReview(userQna로 수정)
●
1. 작성한 qna의 모든 정보를 가져오는 쿼리문
   (공간코드, 내용, Q&A 작성일자, 회원 닉네임, 회원 이메일)
   1-1. 삭제한 테이블은 Q&A 조회 게시물에 보여지면 안된다. 
        (삭제 테이블이랑 조인)
2. 삭제 클릭시 삭제 테이블에 삽입하는 쿼리문
♥
1. 상세보기 버튼 클릭시 팝업창으로 전체 내용 보여줌 
2. 내용이 너무 많아 특정 문자수를 오버하면 ...으로 생략하여 표시
3. 삭제 버튼 클릭시 게시물 삭제


* reviewPopup
●
1. 링크로 받은 코드를 조건으로 하여 qna의 모든 정보를 가져오는 쿼리문
   (내용, 사진, Q&A 작성일자, 회원 닉네임) 
♥
1. 팝업창


* userReview
●
1. 작성한 리뷰의 모든 정보를 가져오는 쿼리문
   (공간코드, 내용, 사진, 리뷰 작성일자, 회원 닉네임, 회원 이메일)
   1-1. 삭제한 테이블은 Q&A 조회 게시물에 보여지면 안된다. 
        (삭제 테이블이랑 조인)
2. 삭제 클릭시 삭제 테이블에 삽입하는 쿼리문
♥
1. 상세보기 버튼 클릭시 팝업창으로 전체 내용 보여줌 
2. 내용이 너무 많아 특정 문자수를 오버하면 ...으로 생략하여 표시
3. 삭제 버튼 클릭시 게시물 삭제


# 승범
* changePassword(use, host)
●
1. 변경 클릭시 현재 비밀번호 조회하여 확인 쿼리문
2. 변경 클릭시 비밀번호 갱신 쿼리문
♥
1. 정규식에 맞지 않으면 에러 메시지 밑에 표시, 텍스트박스 테두리빨강
2. 취소 클릭시 이전 페이지로


* confirmPassword(use, host)
●
1. 변경 클릭시 현재 비밀번호 조회하여 확인 쿼리문
♥
1. 비밀번호 확인 상황 => (탈퇴시, 프로필이동시)
2. 취소시 이전 페이지로


* createAccountSuccess(user, host)
●
♥
1. 로그인 페이지 이동
2. 홈으로 이동


* findPassword(user, host)
●
1. 링크를 보내기 전에 이메일을 조건문으로 회원 코드를 조회하는 쿼리문
   1-1. 회원이 아니라면 이메일을 보내지 않는다.
♥
1. 비밀번호 재설정 링크 보내기 클릭시 
   해당 계정의 특정 재설정 링크를 만들어 양식을 구성하여 메일을 보냄
2. 회원이 아닌 경우 가입된 정보가 없다고 알림창으로 표시한다.


* login(user, host)
●
1. 이메일, 비밀번호 정보를 조건문으로 해당 회원 코드를 조회하는 쿼리문.
   1-1. 회원이 아니라면 로그인 되지 않음
♥
1. 로그인 클릭시 로그인이 된 상태로 이전에 있던 페이지로 이동해야 한다.
2. 회원이 아닌 경우 회원이 아니거나 비밀번호가 없다는 알림을 표시


* main(admin)
●
1. 충전 신청 건을 가져오기 위해 카운트값을 조회하는 쿼리문
2. 신고 접수 건을 가져오기 위해 카운트값을 조회하는 쿼리문
♥


* main(host)
●
1. 아래 통계 작성을 위해 필요한 정보를 조회하는 쿼리문
   (예약성사건, 호스트 수, 이용자 수)
♥
1. 세션을 통한 아이디 유지 방법 찾아봐야함
2. 공간 등록하기 버튼, FAQ 버튼 링크 


* main(user)
●
1. 아래 통계 작성을 위해 필요한 정보를 조회하는 쿼리문
   (예약성사건, 호스트 수, 이용자 수)
2. 오늘의 추천공간을 위해 3개의 공간을 조회하는 쿼리문
   1-1. 평점기준 상위 100개의 공간에서 랜덤으로 3개의 공간을 조회 
   (공간코드, 공간이름, 동이름, 패키지가격{가장싼거}, 인원수, 평점)
3. 이용자리뷰는 15개의 리뷰를 조회하는 쿼리문
   1-1. 그냥 랜덤으로 15개의 리뷰를 조회
   (평점, 닉네임, 리뷰내용(간략히), 리뷰작성일자?) 
♥
1. 오늘의 추천공간, 리뷰 클릭시 해당 공간으로 이동


* profile
●
1. 회원 코드를 바탕으로 프로필 상의 정보를 가져와야 한다.
   (닉네임, 이메일, 연락처, 가입일자, 블랙리스트 전환일{있다면...})
♥
1. 프로필 수정시 바로 그자리에서 수정 가능하게 구성
   1-1. 더불어 정규식검사로 수정가능 여부도 알려줘야한다.


# 일웅
* LocationMgmt
●
1. 공간 관리 리스트 구성을 위한 공간 조회 쿼리문 
   (공간코드, 공간명, 썸네일, 공간등록일자, 검수상태)
   1-1. 삭제된 공간은 보여주면 안되므로, 조인하여 조회 필요
2. 공간 삭제시 삭제 테이블에 데이터를 삽입하는 쿼리문
♥
1. 공간정보수정 버튼 클릭시 해당 공간의 수정 폼 페이지로 이동
2. 새 공간 등록하기 버튼 클릭시 공간 등록 페이지로 이동
3. 공간명, 이미지 클릭시 해당 공간 상세 페이지로 이동


* LocationBasicInfo
●
1. 공간유형 테이블의 데이터를 조회하는 쿼리문
   (공간유형 셀렉트박스를 위해)
♥
1. 텍스트박스 정규식 검사 자스 필요
   (추후 하나 구현하면 그거 가져다가 쓴다)
2. 시설, 예약시 주의사항 추가 버튼 동적으로 태그가 추가되어야 함
   (stlt, js, jsp를 활용), 
   또한 추가된 것들은 삭제 버튼을 통해 삭제가 가능하다. 
   (삭제는 가장 마지막 테이블 부터)
3. 주소 등록 버튼을 누르면 팝업창이 나오고 주소 API를 이용할 수 있어야   한다. (주소 API를 통해 존재하는 해당 주소를 선택하면 팝업창이 종료되고, 주소 텍스트박스에 해당 주소가 입력된다)
4. 다음 버튼을 누르면 다음 입력 폼 페이지가 요청 
   (해당 페이지의 필수 입력사항이 모두 입력되어야 넘어가진다)
5. 해당 입력 데이터들은 DB에 먼저 저장하지 않으므로, 모든 입력폼이 작성되는 페이지에 도달할 때까지 데이터를 컨테이너에 담에 가지고 있어야 한다. (리다이렉트)





